package main.java.generator;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;

public class FileCreator {

  private File file;
  private static final String path = "C:\\Users\\Pauline\\Desktop\\";
  private static final String filename = "Dockerfile";

  private static String Docker_from = "FROM";
  private static String Docker_maintainer = "MAINTAINER";
  private static String Docker_run = "RUN";
  private static String Docker_env = "ENV";
  private static String Docker_cmd = "CMD";

  public FileCreator() {
    this.file = new File(path + filename);

    try {
      if (this.file.createNewFile()) {
        System.out.println("Dockerfile created at : " + path + filename);
      } else {
        System.out.println("Unable to create the Dockerfile.");
      }
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  public void createDockerfile() {
    try {
      BufferedWriter output = new BufferedWriter(new FileWriter(this.file));

      output.write(getHeader());

      output.write(Docker_from);
      output.write(newLine());
      output.write(Docker_maintainer);
      output.write(newLine());
      output.write(Docker_run);
      output.write(newLine());
      output.write(Docker_env);
      output.write(newLine());
      output.write(Docker_cmd);

      output.close();
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  public String getHeader() {
    Date date = new Date();
    return "# This Dockerfile was generated by the DockerFileGenerator project."
      + "\n# Created at " + date.toString() + "\n\n";
  }

  public String newLine() {
    return "\r\n";
  }

  /*
   * *********************************************************************************************
   * GETTERS & SETTERS FOR THE DOCKERFILE'S ARGUMENTS
   *********************************************************************************************/

  public static String getDocker_from() {
    return Docker_from;
  }

  public static void setDocker_from(String docker_from) {
    Docker_from = docker_from;
  }

  public static String getDocker_maintainer() {
    return Docker_maintainer;
  }

  public static void setDocker_maintainer(String docker_maintainer) {
    Docker_maintainer = docker_maintainer;
  }

  public static String getDocker_run() {
    return Docker_run;
  }

  public static void setDocker_run(String docker_run) {
    Docker_run = docker_run;
  }

  public static String getDocker_env() {
    return Docker_env;
  }

  public static void setDocker_env(String docker_env) {
    Docker_env = docker_env;
  }

  public static String getDocker_cmd() {
    return Docker_cmd;
  }

  public static void setDocker_cmd(String docker_cmd) {
    Docker_cmd = docker_cmd;
  }

}
